//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSClient.UserWS
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataServices.Model")]
    public partial class User : object
    {
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentials", Namespace="http://schemas.datacontract.org/2004/07/DataServices.Models.Users")]
    public partial class UserCredentials : object
    {
        
        private string PasswordField;
        
        private string emailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckCredentialsResult", Namespace="http://schemas.datacontract.org/2004/07/DataServices.Model")]
    public partial class CheckCredentialsResult : object
    {
        
        private bool IsValidUserField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidUser
        {
            get
            {
                return this.IsValidUserField;
            }
            set
            {
                this.IsValidUserField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://agencytravel/user/", ConfigurationName="WSClient.UserWS.IUserServices")]
    public interface IUserServices
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/GetUsers", ReplyAction="http://agencytravel/user/IUserServices/GetUsersResponse")]
        System.Threading.Tasks.Task<WSClient.UserWS.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/GetUserByEmail", ReplyAction="http://agencytravel/user/IUserServices/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<WSClient.UserWS.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/GetUserById", ReplyAction="http://agencytravel/user/IUserServices/GetUserByIdResponse")]
        System.Threading.Tasks.Task<WSClient.UserWS.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/CreateUser", ReplyAction="http://agencytravel/user/IUserServices/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(WSClient.UserWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/UpdateUser", ReplyAction="http://agencytravel/user/IUserServices/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(WSClient.UserWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/DeleteUser", ReplyAction="http://agencytravel/user/IUserServices/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://agencytravel/user/IUserServices/CheckCredentials", ReplyAction="http://agencytravel/user/IUserServices/CheckCredentialsResponse")]
        System.Threading.Tasks.Task<WSClient.UserWS.CheckCredentialsResult> CheckCredentialsAsync(WSClient.UserWS.UserCredentials userCredentials);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IUserServicesChannel : WSClient.UserWS.IUserServices, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class UserServicesClient : System.ServiceModel.ClientBase<WSClient.UserWS.IUserServices>, WSClient.UserWS.IUserServices
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UserServicesClient() : 
                base(UserServicesClient.GetDefaultBinding(), UserServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IUserServices.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(UserServicesClient.GetBindingForEndpoint(endpointConfiguration), UserServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UserServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UserServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<WSClient.UserWS.User[]> GetUsersAsync()
        {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Threading.Tasks.Task<WSClient.UserWS.User> GetUserByEmailAsync(string email)
        {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public System.Threading.Tasks.Task<WSClient.UserWS.User> GetUserByIdAsync(int id)
        {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(WSClient.UserWS.User user)
        {
            return base.Channel.CreateUserAsync(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(WSClient.UserWS.User user)
        {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int userId)
        {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public System.Threading.Tasks.Task<WSClient.UserWS.CheckCredentialsResult> CheckCredentialsAsync(WSClient.UserWS.UserCredentials userCredentials)
        {
            return base.Channel.CheckCredentialsAsync(userCredentials);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUserServices))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUserServices))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:9090/UserServices.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return UserServicesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUserServices);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return UserServicesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUserServices);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IUserServices,
        }
    }
}
